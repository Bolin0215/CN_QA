搜索模块报告
foundw

一、	功能概述：
实现针对维基百科中文语料的一个用于QA的搜索引擎
输入：询问语句query
输出：语料中和query最匹配的k个句子

支持两种模式：
模式1：据句子索引搜索、打分排序，直接选出top k
模式2：据段落索引，据讯问抽取排名靠前的段落，再对段落中的句子打分得到top k

二、	工作内容
对经初步处理的语料划分成若干大小适中的文件；
对全部语料分词，对非停用词建立倒排索引，同时建立精确到<文档号，段落号>和<文档号，句子号>两种粒度的索引，同时统计得到词频信息；
根据讯问，利用已建立的倒排索引搜索，返回最匹配的top k个句子交给问题解答模块

三、	倒排索引的建立
1．为了避免每次查询读取全部数据，提高搜索效率，将语料拆分为不超过500KB的文件，得到文件3066个；
2. 利用jieba分词的搜索引擎模式对语料分词，建立倒排索引：
**算法：建立倒排索引index
对每个分词得到的word：
	if word 是停用词：
		结束
	if word 不在index中：
		增加word是索引项
在word的段落索引项中添加<当前文档，当前段落>
	在word的句子索引项中添加<当前文档，当前句子>

据上述信息可以迅速得到word出现的文档数/段落数/句子数，用于词频信息
3. 将得到的到排索引按一定格式写入文件，便于再次使用时直接读取
4. 实现了据单个词语、多个词语AND逻辑关系、多个词语OR逻辑关系的检索方法

四、	搜索得到候选句
（一）搜索流程
 算法1：基于句子索引搜索top k个与query最匹配的句子
输入：询问句子query
1.	对query分词，利用jieba进行词性标注，去停词后，将全部名词性的成分（n*标注）和时间成分（m标注）加入集合wlist，将除了疑问词后跟的名词以外的名词和时间词加入集合wlist_eu，将全部实体（人名、地名等专有名词）加入集合wlist_min；
2.	对wlist中词语，按AND逻辑检索，如果得到的句子数不少于k，跳到6；
3.	否则，对wlist_eu中词语，按AND逻辑检索，如果得到的句子数不少于k，跳到6；
4.	否则，对wlist_min中词语，按AND逻辑检索：
如果得到的句子数大于0，跳到6；
如果没有检索到符合条件的句子，继续5；
5.	对所有wlist_eu中的词语，除去词频大于90000的，按逻辑OR检索，得到句子
6.	如果得到的句子数不大于k，返回所有得到的句子，END
7.	否则对得到的句子调用打分算法，得到分数最高的k个句子返回，END
输出：得到的候选句子集合

算法2：基于段落索引搜索top k个与query最匹配的句子
输入：询问句子query
1.	对query分词，利用jieba进行词性标注，去停词后，将全部名词性的成分（n*标注）和时间成分（m标注）加入集合wlist，将除了疑问词后跟的名词以外的名词和时间词加入集合wlist_eu，将全部实体（人名、地名等专有名词）加入集合wlist_min；
2.	对wlist中词语，按AND逻辑检索，如果得到的段落数不少于k，跳到6；
3.	否则，对wlist_eu中词语，按AND逻辑检索，如果得到的段落数不少于k，跳到6；
4.	否则，对wlist_min中词语，按AND逻辑检索：
如果得到的段落数大于0，跳到6；
如果没有检索到符合条件的段落，继续5；
5.	对所有wlist_eu中的词语，除去词频大于90000的，按逻辑OR检索，得到段落
6.	如果得到的段落数大于k，对段落调用打分算法，得到分数最高的k个段落
7.	将候选段落拆分成句子，得到句子集合
8.	如果句子集合中的句子不超过k个，返回所有句子，END
9.	否则对所有句子调用打分算法，得到分数最高的k个句子返回，END
输出：得到的候选句子集合

实验表明算法2的性能一般优于算法1：
1）query的答案句往往不能包含问题中的诸多要素，但是答案出现的段落则很可能包含其中大多数关键词。例如问题（20），直接句子搜索没有找到答案，因为王菲的合唱对象和“王菲”“相约九八”等关键字没有出现在同一个句子中；但是基于段落搜索再句子打分的方法可以轻松得到含有答案的候选句，因为“那英”、“王菲”、“相约1998”、“合唱”等关键词在同一段落中出现，该段落得分很高，在对句子评分，含有“那英”的句子得以脱颖而出
2）搜索速度更快：由于基于段落搜索往往在AND逻辑就能得到数目相对少的候选段落，近而迅速进入句子打分阶段，而句子搜索很少能在AND逻辑环节命中，首轮得到的句子数往往很多，反而计算耗时较多

（二）打分算法
打分算法是能否得到包含答案的候选句的关键，我们尝试了多种算法，最终采用了一种直观单非常有效的方法。
我们认为匹配的重要因素包括：
1）	query中的实词（v, n*, a）出现在句子中，而且出现的种类远比次数重要，命名实体比其他类型重要；
2）	query中由“引用内容”和《书名歌名》的，引用内容和书名歌名格外重要
由此，我们制订了朴素的打分算法，虽然直观简单，却非常有效：

算法：对query的候选句candidate打分
1.	利用jieba词性标注得到query中的实词集合wset，candidate得分初始为0
2.	for word in west：
3.	 	if word 在 candidate 中：
4.	 		得分 += （100 +句中出现次数）
5.	 		if word 是命名实体：
6.	 			得分 += 50 为额外加分
7.	if  query中含有引号或书名号：
8.	 	提取query引号和书名号中所有子串，得到子串集合substr_set
9.	 	for substr in substr_set:
10.	 		if substr 是candidate的子串：
11.	 			得分 += 500
12.	 			if substr 是引用且长度 > 5字符 得分再加500
13.	如果是对句子打分，最总得分 = 目前得分 / sqrt(句子长度)
14.	返回得分

7-12行对引用的加分是诗词上下句问题解答的利器，例如：
[Q17] 周敦颐的《爱莲说》中“出淤泥而不染”的下一句是什么
[Rank 1] 周敦颐的《爱莲说》写到“予独爱莲之出淤泥而不染，濯清涟而不妖，中通外直，不蔓不枝；香远益清，亭亭净植；可远观而不可亵玩焉”，是对荷花最出名的赞誉。

又如：
[Q23] 被誉为“红军”的是哪一支英超俱乐部
引入引用加分前：
[C1] 孙继海加盟英超曼城俱乐部。
[C2] 英超海外赛.
[C3] 结果拜仁抽中面对英超俱乐部阿森纳。
[C4] 目前效力英超俱乐部车路士，司职正中场。
[C5] 他现在效力于英超球队桑德兰足球俱乐部。

引入后：（“红军”得到额外加分）
[C1] 他在2月10日的英超赛事对纽卡素首次为红军上阵，入替宾纳。
[C2] 宾尼迪斯带领红军于05-06年度英超取得82分，是利物浦参与英超以来最高分。
[C3] 利物浦于四强对同样来自英超的车路士，2月的英格兰联赛杯决赛红军才新败于车路士痛失锦标。
[C4] 四天后，同一周作客对曼联的英超联赛，杜辛拿同样后备上场，在90分钟射入一球笠射，助红军以4-1大胜。
[C5] 在入主红军后，贝尼特斯大笔的购入心仪球员，在执教英超赛场，贝尼特斯曾经连续99场比赛都派出不同的首发阵容。
